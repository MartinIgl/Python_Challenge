# -*- coding: utf-8 -*-
"""jupyter-notebook-test1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12YHmbpUnhQfTIsAI5Yb2nX-0NXjRCV22

### Intro to Earth Analytics 
**Author: Martin Iglesias**


**Date:xx/xx/2021**

### This is a subtitle in Markdown

#### This is a smaller subtitle

##### This is an even smaller subtitle

* This is a bullet list
* This is a bullet list
* This is a bullet list


1. And you can also create ordered lists
2. by using numbers
3. and listing new items in the lists 
4. on their own lines

*These are italicized words, not a bullet list*
**These are bold words, not a bullet list**

* **This is a bullet item with bold words**
* *This is a bullet item with italicized words*

`Here is some code!`

***

Here is some important text!

***

<a href="http://earthdatascience.org" target="_blank">this link</a>.

![Markdown Logo is here.](https://www.fullstackpython.com/img/logos/markdown.png)

![alt text here](path-to-image-here)
"""

# Import necessary packages
import matplotlib.pyplot as plt
import pandas as pd

# Create data
boulder_precip = pd.DataFrame(columns=["fecha", "precip"], 
                              data=[
                                  ["2013-09-09", 0.1], ["2013-09-10", 1.0], 
                                  ["2013-09-11", 2.3], ["2013-09-12", 9.8], ["2013-09-13", 1.9],
                                  ["2013-09-14", 0.01], ["2013-09-15", 1.4], ["2013-09-16", 0.4]])      

#conversi√≥n de unidad (1in=25.4mm)
def in_to_mm(precip):
    return 25.5*precip;

# Create plot
fig, ax = plt.subplots()
ax.bar(boulder_precip['fecha'].values, in_to_mm(boulder_precip['precip']).values)
ax.set(title="Daily Precipitation (pulgadas)\nBoulder, Colorado 2013", 
       xlabel="Date", ylabel="Precipitation (mm)")
plt.setp(ax.get_xticklabels(), rotation=45);

# Import packages
import os

import matplotlib.pyplot as plt
import pandas as pd

# Download and open the .csv file using Pandas
avg_monthly_precip = pd.read_csv(
    "https://ndownloader.figshare.com/files/12710618")

# View the data that you just downloaded and opened
avg_monthly_precip

avg_monthly_precip.info()

# Plot the data
f, ax = plt.subplots()
avg_monthly_precip.plot(x="months",
                        y="precip",
                        title="Precipitation (mm) for One Year",
                        ax=ax)
ax.set(xlabel='Month',
       ylabel='Precipitation (mm)')
plt.show()

#challenge 1
avg_monthly_precip.dtypes

#challenge 2
x="months"
y="precip"
kind="bar"
color="r" #https://het.as.utexas.edu/HET/Software/Matplotlib/api/colors_api.html

f, ax = plt.subplots()
avg_monthly_precip.plot(x="months",
                        y="precip",
                        title="Precipitation (mm) for One Year",
                        ax=ax,kind=kind,color=color)
ax.set(xlabel='Month',
       ylabel='Precipitation (mm)')
plt.show()

miami_temp_url = "https://www.ncdc.noaa.gov/cag/city/time-series/USW00012839-tmax-12-12-1895-2020.csv"

miami_temp = pd.read_csv(miami_temp_url,skiprows=3,na_values=-99)
miami_temp

#challenge 3
# Plot the data
f, ax = plt.subplots()
miami_temp.plot(x="Date",
                        y="Value",
                        title="Temperature(Fahrenheit)-Miami,FL",
                        ax=ax)
ax.set(xlabel='Date',
       ylabel='Temperature (Fahrenheit)')
plt.show()

# Challenge 4
montgomery_temp_url="https://www.ncdc.noaa.gov/cag/city/time-series/USW00013895-tmax-1-5-1895-2020.csv"
mon_temp=pd.read_csv(montgomery_temp_url,skiprows=3,na_values=-99)
mon_temp

# Plot the data
f, ax = plt.subplots()
mon_temp.plot(x="Date",
                        y="Value",
                        title="Temperature(Fahrenheit)-Montogmery,AL",
                        color='red',ax=ax)
ax.set(xlabel='Date',
       ylabel='Temperature (Fahrenheit)')
plt.show()

#Challenge 5

# Download greenhouse gas CO2 data
import urllib.request
#download(in your path where you have your ipynb) and open a new dataset that has CO2 emissions for a field site in Barrow, Alaska (brw)
greenhouse_gas_url = "ftp://aftp.cmdl.noaa.gov/data/trace_gases/co2/in-situ/surface/brw/co2_brw_surface-insitu_1_ccgg_MonthlyData.txt"

urllib.request.urlretrieve(url=greenhouse_gas_url,
                           filename="co2-emissions-barrow.csv")

#Para chequear
#from pathlib import Path
#path = Path('C:\\')/'Users'/'Martin'/'Desktop'/'earth-analytics'/'co2-emissions-barrow.csv'
#df = pd.read_csv(path)

#import os
#os.chdir('C:\\Users\\Martin\\Desktop')
#path = os.path.join('c:' + os.sep, 'Users', 'Martin', 'Desktop', 'earth-analytics', 'co2-emissions-barrow.csv')
#student_data = pd.read_csv(path)

import pandas as pd
C02_url="co2-emissions-barrow.csv"

C02_brw=pd.read_csv(C02_url,sep='#')
C02_brw # data is no well read.

